// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import CoreFoundation;
@import QuartzCore;
@import Foundation;
@import ObjectiveC;
@import MessageUI;
@import SystemConfiguration;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIView;
@class UIApplication;
@class NSObject;

SWIFT_CLASS("_TtC10SaftyDrive11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
@property (nonatomic, strong) UIView * _Null_unspecified myEffectView;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class NSCoder;

SWIFT_CLASS("_TtC10SaftyDrive19MKActivityIndicator")
@interface MKActivityIndicator : UIView
@property (nonatomic, strong) UIColor * _Nonnull color;
@property (nonatomic) CGFloat lineWidth;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) CGRect bounds;
- (void)layoutSubviews;
- (void)startAnimating;
- (void)stopAnimating;
@end

@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC10SaftyDrive8MKButton")
@interface MKButton : UIButton
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

@class MKLayer;

SWIFT_CLASS("_TtC10SaftyDrive10MKCardView")
@interface MKCardView : UIControl
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
@property (nonatomic) CGRect bounds;
@property (nonatomic, strong) MKLayer * _Nonnull mkLayer;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC10SaftyDrive20MKCollectionViewCell")
@interface MKCollectionViewCell : UICollectionViewCell
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

@class UIViewController;

SWIFT_CLASS("_TtC10SaftyDrive28MKEmbedDrawerControllerSegue")
@interface MKEmbedDrawerControllerSegue : UIStoryboardSegue
- (void)perform;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nullable)identifier source:(UIViewController * _Nonnull)source destination:(UIViewController * _Nonnull)destination OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10SaftyDrive26MKEmbedMainControllerSegue")
@interface MKEmbedMainControllerSegue : UIStoryboardSegue
- (void)perform;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nullable)identifier source:(UIViewController * _Nonnull)source destination:(UIViewController * _Nonnull)destination OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;

SWIFT_CLASS("_TtC10SaftyDrive11MKImageView")
@interface MKImageView : UIImageView
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
@property (nonatomic) CGRect bounds;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC10SaftyDrive7MKLabel")
@interface MKLabel : UILabel
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
@property (nonatomic) CGRect bounds;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

@class CAAnimation;

SWIFT_CLASS("_TtC10SaftyDrive7MKLayer")
@interface MKLayer : CALayer
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize elevationOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL backgroundAnimationEnabled;
- (nonnull instancetype)initWithSuperLayer:(CALayer * _Nonnull)superLayer OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithView:(UIView * _Nonnull)view OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
- (void)superLayerDidResize;
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
- (void)startEffectsAtLocation:(CGPoint)touchLocation;
- (void)stopEffects;
- (void)stopEffectsImmediately;
- (void)setRippleColor:(UIColor * _Nonnull)color withRippleAlpha:(CGFloat)rippleAlpha withBackgroundAlpha:(CGFloat)backgroundAlpha;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC10SaftyDrive15MKNavigationBar")
@interface MKNavigationBar : UINavigationBar
@property (nonatomic, readonly, strong) UIView * _Nonnull statusView;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) float shadowOpacity;
@property (nonatomic, strong) UIColor * _Nonnull color;
@property (nonatomic, strong) UIColor * _Nonnull darkColor;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end

@class UIScrollView;

SWIFT_CLASS("_TtC10SaftyDrive16MKRefreshControl")
@interface MKRefreshControl : UIControl
@property (nonatomic, readonly) BOOL refreshing;
@property (nonatomic) CGFloat height;
@property (nonatomic, strong) UIColor * _Nonnull color;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addToScrollView:(UIScrollView * _Nonnull)scrollView withRefreshBlock:(void (^ _Nonnull)(void))block;
- (void)beginRefreshing;
- (void)endRefreshing;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
- (void)handlePanGestureRecognizer;
@end

@class MKSideDrawerViewController;
enum DrawerState : NSInteger;

SWIFT_PROTOCOL("_TtP10SaftyDrive30MKSideDrawerControllerDelegate_")
@protocol MKSideDrawerControllerDelegate
@optional
- (void)drawerController:(MKSideDrawerViewController * _Nonnull)drawerController stateChanged:(enum DrawerState)state;
@end

@class UIScreenEdgePanGestureRecognizer;
@class UIPanGestureRecognizer;
enum DrawerDirection : NSInteger;
@class UIGestureRecognizer;
@class UITapGestureRecognizer;
@class NSBundle;

SWIFT_CLASS("_TtC10SaftyDrive26MKSideDrawerViewController")
@interface MKSideDrawerViewController : UIViewController <UIGestureRecognizerDelegate>
@property (nonatomic, copy) NSString * _Nullable mainSegueIdentifier;
@property (nonatomic, copy) NSString * _Nullable drawerSegueIdentifier;
@property (nonatomic) BOOL screenEdgePanGestreEnabled;
@property (nonatomic, readonly, strong) UIScreenEdgePanGestureRecognizer * _Nonnull screenEdgePanGesture;
@property (nonatomic, readonly, strong) UIPanGestureRecognizer * _Nonnull panGesture;
@property (nonatomic, weak) id <MKSideDrawerControllerDelegate> _Nullable delegate;
@property (nonatomic) enum DrawerDirection drawerDirection;
@property (nonatomic) enum DrawerState drawerState;
@property (nonatomic) CGFloat drawerWidth;
@property (nonatomic, strong) UIViewController * _Null_unspecified mainViewController;
@property (nonatomic, strong) UIViewController * _Nullable drawerViewController;
- (nonnull instancetype)initWithDrawerDirection:(enum DrawerDirection)drawerDirection drawerWidth:(CGFloat)drawerWidth;
- (void)viewDidLoad;
- (void)setDrawerState:(enum DrawerState)state animated:(BOOL)animated;
- (void)transitionFromMainViewController:(UIViewController * _Nonnull)toViewController duration:(NSTimeInterval)duration options:(UIViewAnimationOptions)options animations:(void (^ _Nullable)(void))animations completion:(void (^ _Nullable)(BOOL))completion;
- (void)toggleDrawer:(BOOL)animated;
- (void)handlePanGesture:(UIGestureRecognizer * _Nonnull)sender;
- (void)didtapContainerView:(UITapGestureRecognizer * _Nonnull)gesture;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DrawerDirection) {
  DrawerDirectionLeft = 0,
  DrawerDirectionRight = 1,
};

typedef SWIFT_ENUM(NSInteger, DrawerState) {
  DrawerStateOpened = 0,
  DrawerStateClosed = 1,
};

@protocol MKSnackbarDelegate;

SWIFT_CLASS("_TtC10SaftyDrive10MKSnackbar")
@interface MKSnackbar : UIControl
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable actionTitle;
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable actionTitleColor;
@property (nonatomic, strong) UIColor * _Nullable actionRippleColor;
@property (nonatomic) NSTimeInterval duration;
@property (nonatomic, readonly) BOOL isShowing;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)dismiss;
- (void)addDeleagte:(id <MKSnackbarDelegate> _Nonnull)delegate;
- (void)removeDelegate:(id <MKSnackbarDelegate> _Nonnull)delegate;
- (void)actionButtonSelectorWithTarget:(id _Nonnull)target andAction:(SEL _Null_unspecified)action;
- (void)actionButtonClicked:(id _Nonnull)sender;
@end


SWIFT_PROTOCOL("_TtP10SaftyDrive18MKSnackbarDelegate_")
@protocol MKSnackbarDelegate <NSObject>
@optional
- (void)snackbarShown:(MKSnackbar * _Nonnull)snackbar;
- (void)snackbabrDismissed:(MKSnackbar * _Nonnull)snackbar;
- (void)actionClicked:(MKSnackbar * _Nonnull)snackbar;
@end


SWIFT_CLASS("_TtC10SaftyDrive8MKSwitch")
@interface MKSwitch : UIControl
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, strong) UIColor * _Nonnull thumbOnColor;
@property (nonatomic, strong) UIColor * _Nonnull thumbOffColor;
@property (nonatomic, strong) UIColor * _Nonnull thumbDisabledColor;
@property (nonatomic, strong) UIColor * _Nonnull trackOnColor;
@property (nonatomic, strong) UIColor * _Nonnull trackOffColor;
@property (nonatomic, strong) UIColor * _Nonnull trackDisabledColor;
@property (nonatomic) BOOL on;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC10SaftyDrive13MKSwitchLayer")
@interface MKSwitchLayer : CALayer
@property (nonatomic) BOOL enabled;
@property (nonatomic, strong) MKSwitch * _Nullable parent;
@property (nonatomic) CFTimeInterval rippleAnimationDuration;
- (nonnull instancetype)initWithParent:(MKSwitch * _Nonnull)parent OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)onTouchDown:(CGPoint)touchLocation;
- (void)onTouchMoved:(CGPoint)moveLocation;
- (void)onTouchUp:(CGPoint)touchLocation;
@end


SWIFT_CLASS("_TtC10SaftyDrive15MKTableViewCell")
@interface MKTableViewCell : UITableViewCell
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

@class UIFont;
@class NSAttributedString;

SWIFT_CLASS("_TtC10SaftyDrive11MKTextField")
@interface MKTextField : UITextField
@property (nonatomic) CGSize padding;
@property (nonatomic) CGFloat floatingLabelBottomMargin;
@property (nonatomic) BOOL floatingPlaceholderEnabled;
@property (nonatomic) BOOL maskEnabled;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) CGFloat elevation;
@property (nonatomic) CGSize shadowOffset;
@property (nonatomic) UIRectCorner roundingCorners;
@property (nonatomic) BOOL rippleEnabled;
@property (nonatomic) CFTimeInterval rippleDuration;
@property (nonatomic) CGFloat rippleScaleRatio;
@property (nonatomic, strong) UIColor * _Nonnull rippleLayerColor;
@property (nonatomic) BOOL backgroundAnimationEnabled;
@property (nonatomic) CGRect bounds;
@property (nonatomic, strong) UIFont * _Nonnull floatingLabelFont;
@property (nonatomic, strong) UIColor * _Nonnull floatingLabelTextColor;
@property (nonatomic) BOOL bottomBorderEnabled;
@property (nonatomic) CGFloat bottomBorderWidth;
@property (nonatomic, strong) UIColor * _Nonnull bottomBorderColor;
@property (nonatomic) CGFloat bottomBorderHighlightWidth;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedPlaceholder;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (CGRect)textRectForBounds:(CGRect)bounds;
- (CGRect)editingRectForBounds:(CGRect)bounds;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nullable)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


@interface MKTextField (SWIFT_EXTENSION(SaftyDrive))
@end

@class NSString;

SWIFT_CLASS("_TtC10SaftyDrive12MenuItemView")
@interface MenuItemView : UIView
@property (nonatomic, strong) UILabel * _Nullable titleLabel;
@property (nonatomic, strong) UIView * _Nullable menuItemSeparator;
- (void)setUpMenuItemView:(CGFloat)menuItemWidth menuScrollViewHeight:(CGFloat)menuScrollViewHeight indicatorHeight:(CGFloat)indicatorHeight separatorPercentageHeight:(CGFloat)separatorPercentageHeight separatorWidth:(CGFloat)separatorWidth separatorRoundEdges:(BOOL)separatorRoundEdges menuItemSeparatorColor:(UIColor * _Nonnull)menuItemSeparatorColor;
- (void)setTitleText:(NSString * _Nonnull)text;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NSNumber (SWIFT_EXTENSION(SaftyDrive))
@property (nonatomic, readonly) BOOL isBool;
@end


SWIFT_CLASS("_TtC10SaftyDrive24PagingCellViewController")
@interface PagingCellViewController : UIViewController
- (void)setDataObject:(id _Nullable)dataObject;
- (void)sendMessageToRoot:(NSString * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class PagingViewController;
@class UIPageViewController;

SWIFT_CLASS("_TtC10SaftyDrive20PagingDataController")
@interface PagingDataController : NSObject <UIPageViewControllerDataSource>
@property (nonatomic, copy) NSArray * _Nonnull pageData;
@property (nonatomic, strong) PagingViewController * _Nullable pagingRootViewController;
- (nonnull instancetype)initWithData:(NSArray * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (PagingCellViewController * _Nullable)viewControllerAtIndex:(NSInteger)index;
- (PagingCellViewController * _Nullable)instanciateViewControllerAtIndex:(NSInteger)index;
- (NSInteger)indexOfViewController:(PagingCellViewController * _Nonnull)viewController;
- (UIViewController * _Nullable)pageViewController:(UIPageViewController * _Nonnull)pageViewController viewControllerBeforeViewController:(UIViewController * _Nonnull)viewController;
- (UIViewController * _Nullable)pageViewController:(UIPageViewController * _Nonnull)pageViewController viewControllerAfterViewController:(UIViewController * _Nonnull)viewController;
@end

@class RMTip;
@class NSIndexPath;
@class MFMailComposeViewController;
@class NSError;

SWIFT_CLASS("_TtC10SaftyDrive22RMNavigationController")
@interface RMNavigationController : UIViewController <MFMailComposeViewControllerDelegate, UIGestureRecognizerDelegate, UITextFieldDelegate>
@property (nonatomic, strong) UIView * _Nonnull statasBarBackgroundView;
@property (nonatomic, strong) UITextField * _Nonnull searchTextField;
@property (nonatomic, strong) RMTip * _Nonnull searchButton;
@property (nonatomic, strong) UILabel * _Nonnull titleTextLabel;
@property (nonatomic, strong) UIView * _Nonnull navigationBarView;
@property (nonatomic, strong) UIView * _Nonnull contentView;
@property (nonatomic, strong) UIView * _Nullable overLayView;
@property (nonatomic, strong) RMTip * _Nonnull backButton;
@property (nonatomic, strong) RMTip * _Nonnull menuButton;
- (void)menuCellPushed:(NSIndexPath * _Nonnull)indexPath;
- (void)sendMail;
- (void)mailComposeController:(MFMailComposeViewController * _Nonnull)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * _Nullable)error;
- (void)menuButtonTapped;
- (void)backButtonHidden;
- (void)back;
- (void)searchCanceled;
- (void)searchEnd:(NSString * _Nonnull)Query;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIPageControl;

SWIFT_CLASS("_TtC10SaftyDrive20PagingViewController")
@interface PagingViewController : RMNavigationController <UIPageViewControllerDelegate>
@property (nonatomic, strong) UIPageViewController * _Nullable pageViewController;
@property (nonatomic, strong) UIPageControl * _Nonnull pageControl;
@property (nonatomic, copy) NSArray * _Nonnull pageData;
@property (nonatomic) UIPageViewControllerTransitionStyle trasitionStyle;
@property (nonatomic) UIPageViewControllerNavigationOrientation navigationOrientation;
- (void)receiveMessage:(NSString * _Nonnull)message;
@property (nonatomic, readonly, strong) PagingDataController * _Nonnull dataController;
@property (nonatomic, strong) PagingDataController * _Nullable _dataController;
- (void)viewDidLoad;
- (void)setupWithDataController:(PagingDataController * _Nonnull)dataController;
- (void)setDataController:(PagingDataController * _Nonnull)dataController;
- (void)createView;
- (UIPageViewControllerSpineLocation)pageViewController:(UIPageViewController * _Nonnull)pageViewController spineLocationForInterfaceOrientation:(UIInterfaceOrientation)orientation;
- (void)pageViewController:(UIPageViewController * _Nonnull)pageViewController willTransitionToViewControllers:(NSArray<UIViewController *> * _Nonnull)pendingViewControllers;
- (void)pageViewController:(UIPageViewController * _Nonnull)pageViewController didFinishAnimating:(BOOL)finished previousViewControllers:(NSArray<UIViewController *> * _Nonnull)previousViewControllers transitionCompleted:(BOOL)completed;
- (void)afterPaging:(NSInteger)from to:(NSInteger)to;
- (void)beforePaging:(NSInteger)from to:(NSInteger)to;
- (NSArray<PagingCellViewController *> * _Nonnull)getCurrentViewControllers;
- (PagingCellViewController * _Nonnull)getCurrentViewController;
- (void)moveTargetPage:(NSInteger)index;
- (BOOL)prefersStatusBarHidden;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextView;

SWIFT_CLASS("_TtC10SaftyDrive17RMAlertController")
@interface RMAlertController : UIViewController
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified contentsView;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified alertView;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified titleLabel;
@property (nonatomic, weak) IBOutlet UITextView * _Null_unspecified messageTextView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified AcceptButton;
@property (nonatomic, copy) NSString * _Nonnull titleText;
@property (nonatomic, copy) NSString * _Nonnull messageText;
@property (nonatomic, copy) void (^ _Nonnull runMethod)(void);
- (void)OKButtonTapped;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RMAlertController (SWIFT_EXTENSION(SaftyDrive))
+ (void)showWithPresentintViewController:(UIViewController * _Nonnull)vc title:(NSString * _Nonnull)title message:(NSString * _Nonnull)message;
+ (void)showWithPresentintViewController:(UIViewController * _Nonnull)vc title:(NSString * _Nonnull)title message:(NSString * _Nonnull)message complete:(void (^ _Nonnull)(void))complete;
@end

@class NSTimer;
@protocol RMHorizontalMenuDelegate;

SWIFT_CLASS("_TtC10SaftyDrive16RMHorizontalMenu")
@interface RMHorizontalMenu : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate>
@property (nonatomic, readonly, strong) UIScrollView * _Nonnull menuScrollView;
@property (nonatomic, readonly, strong) UIScrollView * _Nonnull controllerScrollView;
@property (nonatomic, copy) NSArray<UIViewController *> * _Nonnull controllerArray;
@property (nonatomic, copy) NSArray<MenuItemView *> * _Nonnull menuItems;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull menuItemWidths;
@property (nonatomic) CGFloat menuHeight;
@property (nonatomic) CGFloat menuMargin;
@property (nonatomic) CGFloat menuItemWidth;
@property (nonatomic) CGFloat selectionIndicatorHeight;
@property (nonatomic) CGFloat totalMenuItemWidthIfDifferentWidths;
@property (nonatomic) NSInteger scrollAnimationDurationOnMenuItemTap;
@property (nonatomic) CGFloat startingMenuMargin;
@property (nonatomic) CGFloat menuItemMargin;
@property (nonatomic, strong) UIView * _Nonnull selectionIndicatorView;
@property (nonatomic) NSInteger currentPageIndex;
@property (nonatomic) NSInteger lastPageIndex;
@property (nonatomic, strong) UIColor * _Nonnull selectionIndicatorColor;
@property (nonatomic, strong) UIColor * _Nonnull selectedMenuItemLabelColor;
@property (nonatomic, strong) UIColor * _Nonnull unselectedMenuItemLabelColor;
@property (nonatomic, strong) UIColor * _Nonnull scrollMenuBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull viewBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull bottomMenuHairlineColor;
@property (nonatomic, strong) UIColor * _Nonnull menuItemSeparatorColor;
@property (nonatomic, strong) UIFont * _Nonnull menuItemFont;
@property (nonatomic) CGFloat menuItemSeparatorPercentageHeight;
@property (nonatomic) CGFloat menuItemSeparatorWidth;
@property (nonatomic) BOOL menuItemSeparatorRoundEdges;
@property (nonatomic) BOOL addBottomMenuHairline;
@property (nonatomic) BOOL menuItemWidthBasedOnTitleTextWidth;
@property (nonatomic) BOOL titleTextSizeBasedOnMenuItemWidth;
@property (nonatomic) BOOL useMenuLikeSegmentedControl;
@property (nonatomic) BOOL centerMenuItems;
@property (nonatomic) BOOL enableHorizontalBounce;
@property (nonatomic) BOOL hideTopMenuBar;
@property (nonatomic) BOOL currentOrientationIsPortrait;
@property (nonatomic) NSInteger pageIndexForOrientationChange;
@property (nonatomic) BOOL didLayoutSubviewsAfterRotation;
@property (nonatomic) BOOL didScrollAlready;
@property (nonatomic) CGFloat lastControllerScrollViewContentOffset;
@property (nonatomic) NSInteger startingPageForScroll;
@property (nonatomic) BOOL didTapMenuItemToScroll;
@property (nonatomic, copy) NSDictionary<NSNumber *, NSNumber *> * _Nonnull pagesAddedDictionary;
@property (nonatomic, weak) id <RMHorizontalMenuDelegate> _Nullable delegate;
@property (nonatomic, strong) NSTimer * _Nullable tapTimer;
- (nonnull instancetype)initWithViewControllers:(NSArray<UIViewController *> * _Nonnull)viewControllers frame:(CGRect)frame options:(NSDictionary<NSString *, id> * _Nullable)options OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (BOOL)shouldAutomaticallyForwardRotationMethods;
- (void)setUpUserInterface;
- (void)configureUserInterface;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndTapScrollingAnimation;
- (void)moveSelectionIndicator:(NSInteger)pageIndex;
- (void)handleMenuItemTap:(UITapGestureRecognizer * _Nonnull)gestureRecognizer;
- (void)addPageAtIndex:(NSInteger)index;
- (void)removePageAtIndex:(NSInteger)index;
- (void)viewDidLayoutSubviews;
- (void)moveToPage:(NSInteger)index;
@end


SWIFT_PROTOCOL("_TtP10SaftyDrive24RMHorizontalMenuDelegate_")
@protocol RMHorizontalMenuDelegate
@optional
- (void)willMoveToPage:(UIViewController * _Nonnull)controller index:(NSInteger)index;
- (void)didMoveToPage:(UIViewController * _Nonnull)controller index:(NSInteger)index;
@end

@class UITableView;

SWIFT_CLASS("_TtC10SaftyDrive10RMMenuView")
@interface RMMenuView : UIViewController <UIScrollViewDelegate, UITableViewDataSource, UITableViewDelegate>
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull iconArr;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull titleArr;
- (void)setValue:(NSArray<NSString *> * _Nonnull)iconArr titleArr:(NSArray<NSString *> * _Nonnull)titleArr;
@property (nonatomic, strong) IBOutlet MKButton * _Null_unspecified backButton;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified contentsView;
@property (nonatomic, strong) IBOutlet UITableView * _Null_unspecified myTableView;
- (void)backButtonTapped;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RMMenuView (SWIFT_EXTENSION(SaftyDrive))
@end


@class NSNotificationCenter;

SWIFT_CLASS("_TtC10SaftyDrive14RMReachability")
@interface RMReachability : NSObject
@property (nonatomic, copy) void (^ _Nullable whenReachable)(RMReachability * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable whenUnreachable)(RMReachability * _Nonnull);
@property (nonatomic) BOOL reachableOnWWAN;
@property (nonatomic, strong) NSNotificationCenter * _Nonnull notificationCenter;
@property (nonatomic, readonly, copy) NSString * _Nonnull currentReachabilityString;
- (nonnull instancetype)initWithReachabilityRef:(SCNetworkReachabilityRef _Nonnull)reachabilityRef OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithHostname:(NSString * _Nonnull)hostname error:(NSError * _Nullable * _Null_unspecified)error;
+ (RMReachability * _Nullable)reachabilityForInternetConnectionAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
+ (RMReachability * _Nullable)reachabilityForLocalWiFiAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
- (BOOL)startNotifierAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
- (void)stopNotifier;
- (BOOL)isReachable;
- (BOOL)isReachableViaWWAN;
- (BOOL)isReachableViaWiFi;
- (BOOL)isConnectionOnTrafficOrDemand:(SCNetworkReachabilityFlags)flags;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC10SaftyDrive5RMTip")
@interface RMTip : MKButton
- (nonnull instancetype)initWithIcon:(NSString * _Nonnull)icon OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(SaftyDrive))
- (nonnull instancetype)initWithHex:(NSInteger)hex alpha:(CGFloat)alpha;
@end


@interface UIColor (SWIFT_EXTENSION(SaftyDrive))
@property (nonatomic, readonly) uint32_t hexColor;
@property (nonatomic, readonly) CGFloat r;
@property (nonatomic, readonly) CGFloat g;
@property (nonatomic, readonly) CGFloat b;
@property (nonatomic, readonly) CGFloat a;
+ (UIColor * _Nonnull)hex:(uint32_t)hex alpha:(CGFloat)alpha;
+ (UIColor * _Nonnull)hexStr:(NSString * _Nonnull)hexStr alpha:(CGFloat)alpha;
@end


@interface UIImage (SWIFT_EXTENSION(SaftyDrive))
+ (UIColor * _Nonnull)getPixelColorFromUIImage:(UIImage * _Nonnull)myUIImage pos:(CGPoint)pos;
+ (UIImage * _Nonnull)maskImage:(UIImage * _Nonnull)image maskImage:(UIImage * _Nonnull)maskImage;
@end


@interface UIImageView (SWIFT_EXTENSION(SaftyDrive))
+ (UIImageView * _Nonnull)maskImage:(UIImage * _Nonnull)image maskImage:(UIImage * _Nonnull)maskImage;
@end


@interface UITextView (SWIFT_EXTENSION(SaftyDrive))
- (void)_firstBaselineOffsetFromTop;
- (void)_baselineOffsetFromBottom;
@end


@interface UIViewController (SWIFT_EXTENSION(SaftyDrive))

/// A convenience property that provides access to the SideNavigationViewController. This is the recommended method of accessing the SideNavigationViewController through child UIViewControllers.
@property (nonatomic, readonly, strong) MKSideDrawerViewController * _Nullable sideDrawerViewController;
@end


SWIFT_CLASS("_TtC10SaftyDrive14ViewController")
@interface ViewController : UINavigationController
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
